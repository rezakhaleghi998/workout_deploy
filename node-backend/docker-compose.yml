version: '3.8'

services:
  # Node.js API Server
  api:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/fitness-tracker
      - JWT_SECRET=${JWT_SECRET:-fallback-jwt-secret-change-in-production}
      - SESSION_SECRET=${SESSION_SECRET:-fallback-session-secret-change-in-production}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@fitness-tracker.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-FitnessAdmin2024!}
    depends_on:
      - mongodb
    networks:
      - fitness-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-mongopassword123}
      - MONGO_INITDB_DATABASE=fitness-tracker
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fitness-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - fitness-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  fitness-network:
    driver: bridge